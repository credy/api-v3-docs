{
    "openapi": "3.0.0",
    "info": {
      "title": "Romania Affiliate Documentation",
      "description": "# Introduction \n\nCredy is a company that specializes on the quality lead generation. \\\nThis document further describes how to integrate API to send leads to Credy.\\\nIf you have any questions, please do not hesitate to contact the IT manager at [it@credy.eu](mailto:it@credy.eu).\n\n## General information\n\nProduction URL: [https://api.credy.eu/v3/](https://api.credy.eu/v3/)\n\nStaging URL: [http://api.staging.credy.eu/v3/](http://api.staging.credy.eu/v3/)\n\nAPI supports post fields, XML and JSON.\n\nTo get response error messages in romanian, \"Accept-Language\" header’s value must be set to according ISO code. Ex: `ro` or `ro-RO`.\n## Authorization\nAuthorization is performed with OAuth 2.0 Client Credentials Grant.\nClient key and secret key will be assigned to you by Credy.\n## Lead registration flow\n\n1. Request is sent to /v3/customers\n\n2. If request is successful, customer uuid must be stored\n\n3. Request is sent to /v3/leads with previously stored customer uuid in query parameter \"customer\" *ex. /v3/leads?customer=a3ff7c20-e9e8-43a0-bfb7-71a5cf43b8d3* \n4. When the lead is accepted by api (under_investigation is received from POST lead), please redirect the customer to the link provided from leadResponse _links.provider_redirect_url.href field\n",
      "version": "1.1.0"
    },
    "servers": [
      {
        "url": "http://api.staging.credy.eu/v3",
        "description": "Staging server"
      },
      {
        "url": "https://api.credy.eu/v3",
        "description": "Production server"
      }
    ],
    "security": [
      {
        "oAuth": []
      }
    ],
    "paths": {
      "/customers": {
        "post": {
          "description": "Register customer",
          "parameters": [
            {
              "name": "Accept-Language",
              "in": "header",
              "description": "To get response error messages in romanian, header’s value must be set to according ISO code. Ex: `ro` or `ro-RO`.",
              "required": false,
              "style": "simple",
              "explode": false,
              "schema": {
                "format": "string"
              },
              "example": "ro-RO"
            }
          ],
          "requestBody": {
            "description": "Customer info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Customer is registered",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CustomerResponse"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/CustomerResponse"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthorizedResponse"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthorizedResponse"
                  }
                }
              }
            },
            "422": {
              "description": "Validation error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ValidationErrors"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/ValidationErrors"
                  }
                }
              }
            }
          },
          "security": [
            {
              "oAuth": []
            }
          ]
        }
      },
      "/leads": {
        "post": {
          "description": "Register lead",
          "parameters": [
            {
              "name": "Accept-Language",
              "in": "header",
              "description": "To get response error messages in romanian, header’s value must be set to according ISO code. Ex: `ro` or `ro-RO`.",
              "required": false,
              "style": "simple",
              "explode": false,
              "schema": {
                "format": "string"
              },
              "example": "ro-RO"
            },
            {
              "name": "customer",
              "in": "query",
              "description": "Customer uuid from `/customers` response",
              "required": true,
              "style": "form",
              "explode": true,
              "schema": {
                "format": "string"
              },
              "example": "df0f997b-72ae-480a-88a8-4bd73ee89dae"
            }
          ],
          "requestBody": {
            "description": "Lead info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lead"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Lead"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/LeadResponse"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/LeadResponse"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthorizedResponse"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/UnauthorizedResponse"
                  }
                }
              }
            },
            "422": {
              "description": "Validation error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ValidationErrors"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/ValidationErrors"
                  }
                }
              }
            }
          },
          "security": [
            {
              "oAuth": [
                "allow_custom_pingtree"
              ]
            }
          ]
        }
      }
    },
    "components": {
      "securitySchemes": {
        "oAuth": {
          "type": "oauth2",
          "flows": {
            "clientCredentials": {
              "tokenUrl": "/token",
              "scopes": {
                "allow_custom_pingtree": "",
                "get_country_price_list": ""
              }
            }
          }
        },
        "bearerAuth": {
          "type": "http",
          "scheme": "bearer"
        }
      },
      "schemas": {
        "Agreements": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/components/schemas/Agreement"
          },
          "example": {
            "terms_of_service": true
          }
        },
        "Agreement": {
          "type": "boolean"
        },
        "Customer": {
          "required": [
            "email",
            "first_name",
            "last_name",
            "personal_id",
            "phone",
            "address",
            "agreements"
          ],
          "type": "object",
          "properties": {
            "first_name": {
              "type": "string",
              "description": "Format: /^([A-Za-zĂÂÎŞŢăâîşţ]+[\\s\\-\\']?)+[^-]$/ui",
              "example": "Casian",
              "maxLength": 255
            },
            "last_name": {
              "type": "string",
              "description": "Format: /^([A-Za-zĂÂÎŞŢăâîşţ]+[\\s\\-\\']?)+[^-]$/ui",
              "example": "Iancu",
              "maxLength": 255
            },
            "personal_id": {
              "type": "string",
              "description": "Format: ^[1-9]\\d{2}(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])(0[1-9]|[1-4]\\d|5[0-2]|99)(00[1-9]|0[1-9]\\d|[1-9]\\d\\d)\\d$",
              "example": "3940504051724"
            },
            "email": {
              "type": "string",
              "example": "cancu@mailinator.com"
            },
            "phone": {
              "type": "string",
              "example": 40259108761
            },
            "address": {
              "required": [
                "city",
                "street",
                "last_name",
                "house_number",
                "postal_code"
              ],
              "properties": {
                "city": {
                  "type": "string",
                  "description": "Format: /^[A-Za-z0-9ĂÂÎȘŞȚŢăăâîşșţț/s/./,/-]{3,}+$/ui",
                  "example": "Pâncota"
                },
                "street": {
                  "type": "string",
                  "description": "Format: /^[A-Za-z0-9ĂÂÎȘŞȚŢăăâîşșţț/s/./,/-]{3,}+$/ui",
                  "example": "Str. Decebal"
                },
                "house_number": {
                  "type": "string",
                  "description": "Format: ^[0-9]+[A-Za-zĂÂÎȘŞȚŢăâîşșţț]?$/ui",
                  "example": "5A"
                },
                "flat_number": {
                  "type": "string",
                  "description": "Format: ^[0-9]+[A-Za-zĂÂÎȘŞȚŢăâîşșţț]?$/ui",
                  "example": "5A"
                },
                "postal_code": {
                  "type": "integer",
                  "description": "Format: ^([986][0-2]|[73][0-3]|[54][0-5]|[21][0-4]|0[1-8])[/-]{0,1}/d{4}$",
                  "example": "553403"
                }
              }
            },
            "agreements": {
              "$ref": "#/components/schemas/Agreements"
            }
          },
          "xml": {
            "name": "request"
          }
        },
        "Lead": {
          "required": [
            "ip_address",
            "loan_period",
            "loan_sum"
          ],
          "type": "object",
          "properties": {
            "loan_sum": {
              "type": "integer",
              "description": "Amount of credit requested by customer",
              "format": "int32",
              "example": 2000
            },
            "loan_period": {
              "type": "integer",
              "description": "Term for credit requested in days. If you need to pass it in months, please multiply the amount of months by 30 (months * 30)",
              "format": "int32",
              "example": 30
            },
            "ip_address": {
              "type": "string",
              "description": "IP address of customer",
              "example": "192.168.0.255"
            },
            "pingtree": {
              "type": "array",
              "description": "Custom lenders order. Requires `allow_custom_pingtree` oAuth scope.",
              "items": {
                "type": "string",
                "example": "b3345507-8298-4bd1-843a-6a968e593f00"
              }
            },
            "aff_lead_id": {
              "type": "string",
              "description": "Affiliate's application identifier. (can be used for tracking purposes for example)",
              "example": "Jfds45jijgfds46t"
            }
          },
          "xml": {
            "name": "request"
          }
        },
        "ValidationErrors": {
          "type": "array",
          "xml": {
            "name": "response"
          },
          "items": {
            "$ref": "#/components/schemas/ValidationErrors_inner"
          }
        },
        "CustomerResponse": {
          "xml": {
            "name": "response"
          },
          "allOf": [
            {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "b3345507-8298-4bd1-843a-6a968e593f00"
                }
              }
            },
            {
              "$ref": "#/components/schemas/Customer"
            }
          ]
        },
        "LeadResponse": {
          "type": "object",
          "properties": {
            "uuid": {
              "type": "string",
              "example": "b3345507-8298-4bd1-843a-6a968e593f00"
            },
            "loan_sum": {
              "type": "string",
              "example": "250.00"
            },
            "loan_period": {
              "type": "string",
              "example": "30"
            },
            "status": {
              "type": "string",
              "example": "UNDER_INVESTIGATION"
            },
            "date_created": {
              "type": "string",
              "example": "2017-01-04 08:33:09"
            },
            "product": {
              "type": "string",
              "example": "PAYDAY"
            },
            "_links" : {
              "type" : "object",
              "properties" :{
                "provider_redirect_url" : {
                  "type" : "object",
                  "properties" : {
                    "href": {
                      "type" : "string",
                      "example" : "https://credy.ro.staging.credy.com/loading/?lead=b3345507-8298-4bd1-843a-6a968e593f00"
                    }
                  }
                }
              }
            }
          },
          "xml": {
            "name": "response"
          }
        },
        "UnauthorizedResponse": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "Unauthorized"
            },
            "message": {
              "type": "string",
              "example": "Your request was made with invalid credentials."
            },
            "code": {
              "type": "integer",
              "format": "int32",
              "example": 0
            },
            "status": {
              "type": "integer",
              "format": "int32",
              "example": 401
            }
          },
          "xml": {
            "name": "response"
          }
        },
        "ValidationErrors_inner": {
          "type": "object",
          "properties": {
            "field": {
              "type": "string",
              "example": "email"
            },
            "message": {
              "type": "string",
              "example": "Email address is invalid"
            }
          }
        }
      },
      "responses": {
        "CustomerSuccess": {
          "description": "Customer is registered",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerResponse"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CustomerResponse"
              }
            }
          }
        },
        "LeadSuccess": {
          "description": "Lead is under investigation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LeadResponse"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/LeadResponse"
              }
            }
          }
        },
        "ValidationError": {
          "description": "Validation error",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidationErrors"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ValidationErrors"
              }
            }
          }
        },
        "Unauthorized": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnauthorizedResponse"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/UnauthorizedResponse"
              }
            }
          }
        }
      },
      "parameters": {
        "AcceptLanguageHeader": {
          "name": "Accept-Language",
          "in": "header",
          "description": "To get response error messages in romanian, header’s value must be set to according ISO code. Ex: `ro` or `ro-RO`.",
          "required": false,
          "style": "simple",
          "explode": false,
          "schema": {
            "format": "string"
          },
          "example": "ro-RO"
        },
        "CustomerUuid": {
          "name": "customer",
          "in": "query",
          "description": "Customer uuid from `/customers` response",
          "required": true,
          "style": "form",
          "explode": true,
          "schema": {
            "format": "string"
          },
          "example": "df0f997b-72ae-480a-88a8-4bd73ee89dae"
        }
      }
    }
  }
