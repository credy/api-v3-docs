{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "Mexico Affiliate Documentation",
    "description" : "# Introduction \n\nCredy is a company that specializes on the quality lead generation. \\\nThis document further describes fdfhow to integrate API to send leads to Credy.\\\nIf you have any questions, please do not hesitate to contact the IT manager at [it@credy.eu](mailto:it@credy.eu).\n\n## General information\n\nProduction URL: [https://api.credy.eu/v3/](https://api.credy.eu/v3/)\n\nStaging URL: [http://api.staging.credy.eu/v3/](http://api.staging.credy.eu/v3/)\n\nAPI supports post fields, XML and JSON.\n\nTo get response error messages in Spanish, \"Accept-Language\" header’s value must be set to according ISO code. Ex: `es` or `es-MX`.\n## Authorization\nAuthorization is performed with OAuth 2.0 Client Credentials Grant.\nWhen requesting token, the client key and secret key must be sent in request body.\nClient key and secret key will be assigned to you by Credy.\nThe requests to api must be authenticated with [bearer token](https://tools.ietf.org/html/rfc6749#section-7.1).\n## Lead registration flow\n\n1. Request is sent to /v3/customers\n\n2. If request is successful, customer uuid must be stored\n\n3. Request is sent to /v3/leads with previously stored customer uuid in query parameter \"customer\" *ex. /v3/leads?customer=a3ff7c20-e9e8-43a0-bfb7-71a5cf43b8d3* \n4. When the lead is accepted by api (under_investigation is received from POST lead), please redirect the customer to the link provided from leadResponse _links.provider_redirect_url.href field\n",
    "version" : "3.1.0"
  },
  "security": [{
    "oAuth": []
  }],
  "paths" : {
    "/customers" : {
      "post" : {
        "description" : "Register customer",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "To get response error messages in Spanish, header’s value must be set to according ISO code. Ex: `es` or `es-MX`.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "format" : "string"
          },
          "example" : "es-MX"
        } ],
        "requestBody" : {
          "description" : "Customer info",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Customer"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/Customer"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Customer is registered",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerResponse"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedResponse"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationErrors"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationErrors"
                }
              }
            }
          }
        },
        "security" : [ {
          "oAuth" : [ ]
        } ]
      }
    },
    "/leads" : {
      "post" : {
        "description" : "Register lead",
        "parameters" : [ {
          "name" : "Accept-Language",
          "in" : "header",
          "description" : "To get response error messages in Spanish, header’s value must be set to according ISO code. Ex: `es` or `es-MX`.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "format" : "string"
          },
          "example" : "id-ID"
        }, {
          "name" : "customer",
          "in" : "query",
          "description" : "Customer uuid from `/customers` response",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "format" : "string"
          },
          "example" : "df0f997b-72ae-480a-88a8-4bd73ee89dae"
        } ],
        "requestBody" : {
          "description" : "Lead info",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Lead"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/Lead"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LeadResponse"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LeadResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedResponse"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "422" : {
            "description" : "Validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationErrors"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidationErrors"
                }
              }
            }
          }
        },
        "security" : [ {
          "oAuth" : [ "allow_custom_pingtree" ]
        } ]
      }
    },
    "/country/price-list" : {
      "get" : {
        "description" : "Get lenders prices",
        "responses" : {
          "200" : {
            "description" : "Lenders prices",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CountryPricesResponse"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CountryPricesResponse"
                }
              }
            }
          },
          "401" : {
            "description" : "Lenders prices",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CountryPricesResponse"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CountryPricesResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "oAuth" : [ "get_country_price_list" ]
        } ]
      }
    }
  },
  "components" : {
    "securitySchemes": {
      "oAuth": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "/token",
            "scopes": { 
              "allow_custom_pingtree": "",
              "get_country_price_list": ""
            }
          }
        }
      },
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas" : {
      "PrimaryAddress" : {
        "required" : [ "city", "street", "house_number", "postal_code", "region", "county", "district" ],
        "type" : "object",
        "properties" : {
          "postal_code" : {
            "type" : "string",
            "description" : "Format: /^[0-9]{5}$/",
            "example" : 38627,
            "maxLength": 45
          },
          "city" : {
            "type" : "string",
            "example" : "La Camella",
            "maxLength": 45
          },
          "street" : {
            "type" : "string",
            "example" : "Ruela Armenta",
            "maxLength": 45
          },
          "house_number" : {
            "type" : "string",
            "example" : "1",
            "maxLength": 45
          },
          "flat_number" : {
            "type" : "integer",
            "description" : "",
            "example" : "4",
            "maxLength": 255
          },
          "region" : {
            "type" : "string",
            "example" : "Customer region"
          },
          "county" : {
            "type" : "string",
            "example" : "Customer county"
          },
          "district" : {
            "type" : "string",
            "example" : "Customer district"
          },
          "colony" : {
            "type" : "string",
            "description" : "Required if product === CAR",
            "example" : "Customer colony",
            "maxLength": 255
          }
        }
      },
      "Agreements" : {
        "type" : "object",
        "additionalProperties" : {
          "$ref" : "#/components/schemas/Agreement"
        },
        "example" : {
          "terms_of_service" : true,
          "data_proccessing_policy" : true
        }
      },
      "Agreement" : {
        "type" : "boolean"
      },
      "Customer" : {
        "required" : [ "first_name", "last_name", "second_last_name", "email", "personal_id", "tax_id_number", "phone", "phone_plan", "address", "birth_date", "gender", "marital_status", "bank_account", "nationality", "occupation", "neto_income", "remuneration_deadline", "monthly_expenses", "housing_type", "dependant_count", "agreements", "credit_score", "has_loan", "car" ],
        "type" : "object",
        "properties" : {
          "first_name" : {
            "type" : "string",
            "example" : "Enós",
            "description" : "Format: /^[a-záéèíñóúüç[:space:]-']+$/ui",
            "maxLength": 255
          },
          "second_first_name" : {
            "type" : "string",
            "example" : "Augurio",
            "description" : "Format: /^[a-záéèíñóúüç[:space:]-']+$/ui"
          },
          "last_name" : {
            "type" : "string",
            "example" : "Leones",
            "description" : "Format: /^[a-záéèíñóúüç[:space:]-']+$/ui",
            "maxLength": 255
          },
          "second_last_name" : {
            "type" : "string",
            "example" : "Liz",
            "description" : "Format: /^[a-záéèíñóúüç[:space:]-']+$/ui"
          },
          "gender" : {
            "type" : "string",
            "example" : "MALE",
            "enum" : [ "MALE", "FEMALE" ]
          },
          "birth_date" : {
            "type" : "string",
            "example" : "1989-05-23",
            "format" : "date",
            "pattern" : "^([12][0-9]{3}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01]))$"
          },
          "personal_id" : {
            "type" : "string",
            "description" : "Format: /^[A-Z]{1}[AEIOUX]{1}[A-Z]{2}[0-9]{2}(0[1-9]|1[0-2])(0[1-9]|1[0-9]|2[0-9]|3[0-1])[HM]{1}(AS|BC|BS|CC|CS|CH|CL|CM|DF|DG|GT|GR|HG|JC|MC|MN|MS|NT|NL|OC|PL|QT|QR|SP|SL|SR|TC|TS|TL|VZ|YN|ZS|NE)[B-DF-HJ-NP-TV-Z]{3}[0-9A-Z]{1}[0-9]{1}$/",
            "example" : "JECS660715MNERNN73"
          },
          "tax_id_number" : {
            "type" : "string",
            "example" : "CACX030424GKY",
            "description" : "Format: /^[A-Z]{1}[AEIOUX]{1}[A-Z]{2}[0-9]{2}(?:0[1-9]|1[0-2])(?:0[1-9]|1[0-9]|2[0-9]|3[0-1])[A-Za-z0-9]{3}$/"
          },
          "marital_status" : {
            "type" : "string",
            "example" : "MARRIED",
            "enum" : [ "SINGLE", "MARRIED", "DIVORCED", "WITH_PARTNER", "WIDOW" ]
          },
          "bank_account" : {
            "type" : "string",
            "example" : 3.0350429344682184E16,
            "minLength": 18,
            "maxLength": 18
          },
          "nationality" : {
            "type" : "string",
            "example" : "MX",
            "enum" : [ "ES", "MX", "AL", "AR", "BR", "BU", "RU" ]
          },
          "dependant_count" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 0
          },
          "bad_credit_history" : {
            "type" : "boolean"
          },
          "email" : {
            "type" : "string",
            "example" : "martelle.judit@mailinator.com"
          },
          "phone" : {
            "type" : "string",
            "example" : "+52 871 253 7087"
          },
          "phone_plan" : {
            "type" : "string",
            "example" : "PREPAID",
            "enum" : [ "PREPAID", "CONTRACT" ]
          },
          "address" : {
            "$ref" : "#/components/schemas/PrimaryAddress"
          },
          "housing_type" : {
            "type" : "string",
            "example" : "RENTED_ROOM",
            "enum" : [ "RENTED_ROOM", "RENTED_APARTMENT_OR_HOUSE", "OWN_HOUSE_OR_APARTMENT", "WITH_PARENTS" ]
          },
          "occupation" : {
            "type" : "string",
            "example" : "EMPLOYED_INDEFINITE_PERIOD",
            "enum" : [ "EMPLOYED_INDEFINITE_PERIOD", "SELF_EMPLOYED", "PENSIONER1", "STUDENT", "UNEMPLOYED", "FREELANCER", "OWN_BUSINESS", "MATERNITY_LEAVE" ]
          },
          "neto_income" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 1500
          },
          "monthly_expenses" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 900
          },
          "remuneration_deadline" : {
            "type" : "string",
            "example" : "2023-04-18",
            "format" : "date",
            "pattern" : "^([12][0-9]{3}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01]))$"
          },
          "employed_since" : {
            "type" : "string",
            "example" : "2021-02-18",
            "format" : "date",
            "pattern" : "^([12][0-9]{3}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01]))$",
            "description" : "required when `occupation` is in:\n- EMPLOYED_INDEFINITE_PERIOD\n- EMPLOYED_SPECIFIED_PERIOD\n- SELF_EMPLOYED\n- OWN_BUSINESS\n- WRITTEN_CONTRACT_OR_ORDER\n"
          },
          "employer" : {
            "type" : "string",
            "example" : "Carrera PLC",
            "description" : "required when `occupation` is in:\n- EMPLOYED_INDEFINITE_PERIOD\n- EMPLOYED_SPECIFIED_PERIOD\n- SELF_EMPLOYED\n- OWN_BUSINESS\n- WRITTEN_CONTRACT_OR_ORDER\n"
          },
          "credit_score": {
            "type" : "string",
            "example" : "EXCELLENT_700_TO_850",
            "enum": [ "EXCELLENT_700_TO_850", "GOOD_650_TO_700", "STABLE_550_TO_650", "LOW_300_TO_550", "DONT_KNOW", "NO_CREDIT_HISTORY"]
          },
          "has_loan": {
            "type": "boolean",
            "example": true
          },
          "debt_amount": {
            "type": "integer",
            "example": 1000,
            "description": "Required when `has_loan` = true"
          },
          "has_credit_card" : {
            "type": "boolean",
            "description": "Required when `credit_score` = DONT_KNOW",
            "example": true
          },
          "car" : {
            "type" : "string",
            "description" : "Required if product === PAYDAY",
            "example" : "YES",
            "enum" : [ "YES", "NO" ]
          },
          "agreements" : {
            "$ref" : "#/components/schemas/Agreements"
          }
        },
        "xml" : {
          "name" : "request"
        }
      },
      "Lead" : {
        "required" : [ "ip_address", "loan_period", "loan_purpose", "loan_sum" ],
        "type" : "object",
        "properties" : {
          "loan_sum" : {
            "type" : "integer",
            "description" : "Amount of credit requested by customer",
            "format" : "int32",
            "example" : 2000
          },
          "loan_period" : {
            "type" : "integer",
            "description" : "Term for credit requested in days. If you need to pass it in months, please multiply the amount of months by 30 (months * 30)",
            "format" : "int32",
            "example" : 30
          },
          "ip_address" : {
            "type" : "string",
            "description" : "IP address of customer",
            "example" : "192.168.0.255"
          },
          "loan_purpose" : {
            "type" : "string",
            "example" : "TRAVEL",
            "enum": [ "PURCHASE_OF_FOOD", "BUYING_ELECTRONICS", "CREATE_CREDIT_HISTORY", "SCHOOL_EXPENSES", "UNFORESEEN_EXPENSE", "MEDICAL_EXPENSES", "MAINTENANCE_OR_REPAIR_OF_HOUSE", "PAY_ANOTHER_LOAN", "PAYMENT_OF_SERVICES", "FOR_MY_BUSINESS", "TRAVEL", "OTHER" ]
          },
          "pingtree" : {
            "type" : "array",
            "description" : "Custom lenders order. Requires `allow_custom_pingtree` oAuth scope",
            "items" : {
              "type" : "string",
              "example" : "b3345507-8298-4bd1-843a-6a968e593f00"
            }
          },
          "aff_lead_id": {
            "type": "string",
            "description": "Affiliate's application identifier. (can be used for tracking purposes for example)",
            "example": "Jfds45jijgfds46t"
          }
        },
        "xml" : {
          "name" : "request"
        }
      },
      "ValidationErrors" : {
        "type" : "array",
        "xml" : {
          "name" : "response"
        },
        "items" : {
          "$ref" : "#/components/schemas/ValidationErrors_inner"
        }
      },
      "CustomerResponse" : {
        "xml" : {
          "name" : "response"
        },
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "uuid" : {
              "type" : "string",
              "example" : "b3345507-8298-4bd1-843a-6a968e593f00"
            }
          }
        }, {
          "$ref" : "#/components/schemas/Customer"
        } ]
      },
      "LeadResponse" : {
        "type" : "object",
        "properties" : {
          "uuid" : {
            "type" : "string",
            "example" : "b3345507-8298-4bd1-843a-6a968e593f00"
          },
          "loan_sum" : {
            "type" : "string",
            "example" : "250.00"
          },
          "loan_period" : {
            "type" : "string",
            "example" : "30"
          },
          "status" : {
            "type" : "string",
            "example" : "UNDER_INVESTIGATION"
          },
          "date_created" : {
            "type" : "string",
            "example" : "2017-01-04 08:33:09"
          },
          "product" : {
            "type" : "string",
            "example" : "PAYDAY"
          },
          "_links" : {
            "type" : "object",
            "properties" :{
              "provider_redirect_url" : {
                "type" : "object",
                "properties" : {
                  "href": {
                    "type" : "string",
                    "example" : "https://www.credy.com.mx/loading/?lead=b3345507-8298-4bd1-843a-6a968e593f00"
                  }
                }
              }
            }
          }
        },
        "xml" : {
          "name" : "response"
        }
      },
      "CountryPricesResponse" : {
        "type" : "array",
        "xml" : {
          "name" : "response"
        },
        "items" : {
          "$ref" : "#/components/schemas/CountryPricesResponse_inner"
        }
      },
      "UnauthorizedResponse" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "Unauthorized"
          },
          "message" : {
            "type" : "string",
            "example" : "Your request was made with invalid credentials."
          },
          "code" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 0
          },
          "status" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 401
          }
        },
        "xml" : {
          "name" : "response"
        }
      },
      "ValidationErrors_inner" : {
        "type" : "object",
        "properties" : {
          "field" : {
            "type" : "string",
            "example" : "email"
          },
          "message" : {
            "type" : "string",
            "example" : "Email address is invalid"
          }
        }
      },
      "CountryPricesResponse_inner" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "Lender 1"
          },
          "uiid" : {
            "type" : "string",
            "example" : "b3345507-8298-4bd1-843a-6a968e593f00"
          },
          "prices" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object",
                "properties" : {
                  "price" : {
                    "type" : "string",
                    "example" : "12.40"
                  },
                  "currency" : {
                    "type" : "string",
                    "example" : "EUR"
                  }
                }
              },
              "example" : {
                "accepted" : {
                  "price" : "12.40",
                  "currency" : "EUR"
                }
              }
            }
          }
        }
      }
    },
    "responses" : {
      "CustomerSuccess" : {
        "description" : "Customer is registered",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CustomerResponse"
            }
          },
          "application/xml" : {
            "schema" : {
              "$ref" : "#/components/schemas/CustomerResponse"
            }
          }
        }
      },
      "LeadSuccess" : {
        "description" : "Lead is under investigation",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/LeadResponse"
            }
          },
          "application/xml" : {
            "schema" : {
              "$ref" : "#/components/schemas/LeadResponse"
            }
          }
        }
      },
      "CountryPricesResponse" : {
        "description" : "Lenders prices",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CountryPricesResponse"
            }
          },
          "application/xml" : {
            "schema" : {
              "$ref" : "#/components/schemas/CountryPricesResponse"
            }
          }
        }
      },
      "ValidationError" : {
        "description" : "Validation error",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ValidationErrors"
            }
          },
          "application/xml" : {
            "schema" : {
              "$ref" : "#/components/schemas/ValidationErrors"
            }
          }
        }
      },
      "Unauthorized" : {
        "description" : "Unauthorized",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UnauthorizedResponse"
            }
          },
          "application/xml" : {
            "schema" : {
              "$ref" : "#/components/schemas/UnauthorizedResponse"
            }
          }
        }
      }
    },
    "parameters" : {
      "AcceptLanguageHeader" : {
        "name" : "Accept-Language",
        "in" : "header",
        "description" : "To get response error messages in Spanish, header’s value must be set to according ISO code. Ex: `es` or `es-MX`.",
        "required" : false,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "format" : "string"
        },
        "example" : "id-ID"
      },
      "CustomerUuid" : {
        "name" : "customer",
        "in" : "query",
        "description" : "Customer uuid from `/customers` response",
        "required" : true,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "format" : "string"
        },
        "example" : "df0f997b-72ae-480a-88a8-4bd73ee89dae"
      }
    }
  },
  "servers" : [ {
    "description" : "SwaggerHub API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/credy/mexico-affiliate-docs/3.0.0"
  } ]
}
