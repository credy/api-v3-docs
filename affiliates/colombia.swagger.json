{
  "openapi" : "3.0.0",
  "info" : {
    "version" : "3.1.0",
    "title" : "Colombia affiliates API",
    "description" : "# Introduction \n\nCredy is a company that specializes on the quality lead generation. \\\nThis document further describes how to integrate API to send leads to Credy.\\\nIf you have any questions, please do not hesitate to contact the IT manager at [it@credy.eu](mailto:it@credy.eu).\n\n## General information\n\nProduction URL: [https://api.credy.eu/v3/](https://api.credy.eu/v3/)\n\nStaging URL: [http://api.staging.credy.eu/v3/](http://api.staging.credy.eu/v3/)\n\nAPI supports post fields, XML and JSON.\n\nTo get response error messages in Colombian, \"Accept-Language\" header’s value must be set to according ISO code. Ex: `es` or `es-CO`.\n\n## Authorization\nAuthorization is performed with OAuth 2.0 Client Credentials Grant.\nWhen requesting token, the client key and secret key must be sent in request body.\nClient key and secret key will be assigned to you by Credy.\nThe requests to api must be authenticated with [bearer token](https://tools.ietf.org/html/rfc6749#section-7.1).\n\n## Lead registration flow\n\n1. Request is sent to /v3/customers\n\n2. If request is successful, customer uuid must be stored\n\n3. Request is sent to /v3/leads with previously stored customer uuid in query parameter \"customer\" *ex. /v3/leads?customer=a3ff7c20-e9e8-43a0-bfb7-71a5cf43b8d3* \n4. When the lead is accepted by api (under_investigation is received from POST lead), please redirect the customer to the link provided from leadResponse _links.provider_redirect_url.href field\n"
  },
  "servers" : [ {
    "description" : "SwaggerHub API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/credy/colombia-affiliate-docs/3.0.0"
  }, {
    "url" : "http://api.staging.credy.eu/v3",
    "description" : "Staging server"
  }, {
    "url" : "https://api.credy.eu/v3",
    "description" : "Production server"
  } ],
  "security": [{
    "oAuth": []
  }],
  "paths" : {
    "/customers" : {
      "post" : {
        "description" : "Register customer",
        "parameters" : [ {
          "$ref" : "#/components/parameters/AcceptLanguageHeader"
        } ],
        "requestBody" : {
          "description" : "Customer info",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Customer"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/Customer"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/CustomerSuccess"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "422" : {
            "$ref" : "#/components/responses/ValidationError"
          }
        }
      }
    },
    "/leads" : {
      "post" : {
        "description" : "Register lead",
        "parameters" : [ {
          "$ref" : "#/components/parameters/AcceptLanguageHeader"
        }, {
          "$ref" : "#/components/parameters/CustomerUuid"
        } ],
        "requestBody" : {
          "description" : "Lead info",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Lead"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/Lead"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/LeadSuccess"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "422" : {
            "$ref" : "#/components/responses/ValidationError"
          }
        }
      }
    }
  },
  "components" : {
    "securitySchemes": {
      "oAuth": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "/token",
            "scopes": { 
              "allow_custom_pingtree": "",
              "get_country_price_list": ""
            }
          }
        }
      },
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "responses" : {
      "CustomerSuccess" : {
        "description" : "Customer is registered",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CustomerResponse"
            }
          },
          "application/xml" : {
            "schema" : {
              "$ref" : "#/components/schemas/CustomerResponse"
            }
          }
        }
      },
      "LeadSuccess" : {
        "description" : "",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/LeadResponse"
            }
          },
          "application/xml" : {
            "schema" : {
              "$ref" : "#/components/schemas/LeadResponse"
            }
          }
        }
      },
      "ValidationError" : {
        "description" : "Validation error",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ValidationErrors"
            }
          },
          "application/xml" : {
            "schema" : {
              "$ref" : "#/components/schemas/ValidationErrors"
            }
          }
        }
      },
      "Unauthorized" : {
        "description" : "Unauthorized",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/UnauthorizedResponse"
            }
          },
          "application/xml" : {
            "schema" : {
              "$ref" : "#/components/schemas/UnauthorizedResponse"
            }
          }
        }
      }
    },
    "schemas" : {
      "PrimaryAddress" : {
        "type" : "object",
        "required" : [ "city", "street"],
        "properties" : {
          "city" : {
            "type" : "string",
            "example" : "San Santiagodel Penedès",
            "description" : "Format: /^[a-záéèíñóúüç[:space:]\\-\\']+$/ui",
            "maxLength": 45
          },
          "street" : {
            "type" : "string",
            "example" : "Calle Díaz",
            "maxLength": 45
          }
        }
      },
      "Agreements" : {
        "type" : "object",
        "required" : [ "data_proccessing_policy", "terms_of_service" ],
        "properties" : {
          "data_proccessing_policy" : {
            "type" : "boolean",
            "example" : true
          },
          "terms_of_service" : {
            "type" : "boolean",
            "example" : true
          }
        }
      },
      "Customer" : {
        "type" : "object",
        "required" : [ "first_name", "last_name", "second_last_name", "personal_id", "birth_date", "email", "phone", "address", "occupation", "neto_income", "agreements" ],
        "properties" : {
          "first_name" : {
            "type" : "string",
            "example" : "Emmanuel",
            "description" : "Format: /^([a-záéèíñóúüç]+[\\s\\-\\']?)+$/ui",
            "maxLength": 255
          },
          "last_name" : {
            "type" : "string",
            "example" : "Sánchez",
            "description" : "Format: /^([a-záéèíñóúüç]+[\\s\\-\\']?)+$/ui",
            "maxLength": 255
          },
          "second_last_name" : {
            "type" : "string",
            "example" : "Díaz",
            "description" : "Format: /^([a-záéèíñóúüç]+[\\s\\-\\']?)+$/ui"
          },
          "personal_id" : {
            "type" : "string",
            "example" : "7861422140",
            "description" : "Format: /^\\d{7,10}$/"
          },
          "birth_date" : {
            "type" : "string",
            "example" : "1984-03-12",
            "description" : "Customer birth date \\\nMust be valid date `YYYY-mm-dd` \n"
          },
          "email" : {
            "type" : "string",
            "example" : "sofia18@sanchez.es"
          },
          "phone" : {
            "type" : "string",
            "example" : "+57 305-3070600"
          },
          "address" : {
            "$ref" : "#/components/schemas/PrimaryAddress"
          },
          "occupation" : {
            "type" : "string",
            "enum" : [ "EMPLOYED_INDEFINITE_PERIOD", "SELF_EMPLOYED", "STUDENT", "MATERNITY_LEAVE", "PENSIONER1", "OWN_BUSINESS", "FREELANCER", "UNEMPLOYED" ],
            "example" : "EMPLOYED_INDEFINITE_PERIOD"
          },
          "neto_income" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 1500
          },
          "agreements" : {
            "$ref" : "#/components/schemas/Agreements"
          }
        },
        "xml" : {
          "name" : "request"
        }
      },
      "Lead" : {
        "type" : "object",
        "required" : [ "loan_sum", "loan_period", "ip_address" ],
        "properties" : {
          "loan_sum" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Amount of credit requested by customer",
            "example" : 2000
          },
          "loan_period" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Term for credit requested in days. If you need to pass it in months, please multiply the amount of months by 30 (months * 30)",
            "example" : 30
          },
          "ip_address" : {
            "type" : "string",
            "description" : "IP address of customer",
            "example" : "192.168.0.255"
          },
          "aff_lead_id": {
            "type": "string",
            "description": "Affiliate's application identifier. (can be used for tracking purposes for example)",
            "example": "Jfds45jijgfds46t"
          }
        },
        "xml" : {
          "name" : "request"
        }
      },
      "ValidationErrors" : {
        "type" : "array",
        "items" : {
          "type" : "object",
          "properties" : {
            "field" : {
              "type" : "string",
              "example" : "email"
            },
            "message" : {
              "type" : "string",
              "example" : "Email address is invalid"
            }
          }
        },
        "xml" : {
          "name" : "response"
        }
      },
      "CustomerResponse" : {
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "uuid" : {
              "type" : "string",
              "example" : "b3345507-8298-4bd1-843a-6a968e593f00"
            }
          }
        }, {
          "$ref" : "#/components/schemas/Customer"
        } ],
        "xml" : {
          "name" : "response"
        }
      },
      "LeadResponse" : {
        "type" : "object",
        "properties" : {
          "uuid" : {
            "type" : "string",
            "example" : "b3345507-8298-4bd1-843a-6a968e593f00"
          },
          "loan_sum" : {
            "type" : "string",
            "example" : "250.00"
          },
          "loan_period" : {
            "type" : "string",
            "example" : "30"
          },
          "status" : {
            "type" : "string",
            "example" : "UNDER_INVESTIGATION"
          },
          "date_created" : {
            "type" : "string",
            "example" : "2017-01-04 08:33:09"
          },
          "product" : {
            "type" : "string",
            "example" : "PAYDAY"
          },
          "_links" : {
            "type" : "object",
            "properties" :{
              "provider_redirect_url" : {
                "type" : "object",
                "properties" : {
                  "href": {
                    "type" : "string",
                    "example" : "https://www.credy.com.co/loading/?lead=b3345507-8298-4bd1-843a-6a968e593f00"
                  }
                }
              }
            }
          }
        },
        "xml" : {
          "name" : "response"
        }
      },
      "UnauthorizedResponse" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "Unauthorized"
          },
          "message" : {
            "type" : "string",
            "example" : "Your request was made with invalid credentials."
          },
          "code" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 0
          },
          "status" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 401
          }
        },
        "xml" : {
          "name" : "response"
        }
      }
    },
    "parameters" : {
      "AcceptLanguageHeader" : {
        "name" : "Accept-Language",
        "in" : "header",
        "schema" : {
          "format" : "string"
        },
        "required" : false,
        "description" : "To get response error messages in Colombian, header’s value must be set to according ISO code. Ex: `es` or `es-CO`.",
        "example" : "es-CO"
      },
      "CustomerUuid" : {
        "name" : "customer",
        "in" : "query",
        "schema" : {
          "format" : "string"
        },
        "required" : true,
        "description" : "Customer uuid from `/customers` response",
        "example" : "df0f997b-72ae-480a-88a8-4bd73ee89dae"
      }
    }
  }
}
